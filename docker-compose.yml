version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: mcp_postgres
    environment:
      POSTGRES_DB: mcp_db
      POSTGRES_USER: mcp_user
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mcp_user -d mcp_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mcp_network

  # Neo4j Database
  neo4j:
    image: neo4j:5
    container_name: mcp_neo4j
    environment:
      NEO4J_AUTH: neo4j/test12345
      NEO4J_apoc_export_file_enabled: "true"
      NEO4J_apoc_import_file_enabled: "true"
      NEO4J_apoc_import_file_use__neo4j__config: "true"
    ports:
      - "7475:7474"  # HTTP (mapped to 7475 to avoid conflict)
      - "7688:7687"  # Bolt (mapped to 7688 to avoid conflict)
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:7474/browser/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mcp_network

  # MCP Server Application
  mcp_server:
    build: .
    container_name: mcp_server
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=mcp_db
      - POSTGRES_USER=mcp_user
      - POSTGRES_PASSWORD=secret
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=test12345
      - AZURE_API_KEY=${AZURE_API_KEY}
      - AZURE_API_BASE=${AZURE_API_BASE}
      - AZURE_DEPLOYMENT=${AZURE_DEPLOYMENT}
    depends_on:
      postgres:
        condition: service_healthy
      neo4j:
        condition: service_healthy
    volumes:
      - ./mcp_server:/app/mcp_server
      - ./mcp_client:/app/mcp_client
    networks:
      - mcp_network
    restart: unless-stopped

  # Optional: MCP Client (for testing)
  mcp_client:
    build: .
    container_name: mcp_client
    command: ["python", "mcp_client/client.py"]
    environment:
      - MCP_SERVER_URL=http://mcp_server:8000
    depends_on:
      - mcp_server
    networks:
      - mcp_network
    profiles:
      - client

volumes:
  postgres_data:
  neo4j_data:
  neo4j_logs:
  neo4j_import:
  neo4j_plugins:

networks:
  mcp_network:
    driver: bridge 